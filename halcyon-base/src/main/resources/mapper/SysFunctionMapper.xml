<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.marshal.halcyon.base.function.mapper.SysFunctionMapper">
    <resultMap id="BaseResultMap" type="com.marshal.halcyon.base.function.entity.SysFunction">
        <id column="FUNCTION_ID" jdbcType="BIGINT" property="functionId"/>
        <result column="MODULE_CODE" jdbcType="VARCHAR" property="moduleCode"/>
        <result column="FUNCTION_ICON" jdbcType="VARCHAR" property="functionIcon"/>
        <result column="FUNCTION_CODE" jdbcType="VARCHAR" property="functionCode"/>
        <result column="FUNCTION_NAME" jdbcType="VARCHAR" property="functionName"/>
        <result column="FUNCTION_DESCRIPTION" jdbcType="VARCHAR" property="functionDescription"/>
        <result column="RESOURCE_ID" jdbcType="BIGINT" property="resourceId"/>
        <result column="PARENT_FUNCTION_ID" jdbcType="BIGINT" property="parentFunctionId"/>
        <result column="ENABLE_FLAG" jdbcType="VARCHAR" property="enableFlag"/>
        <result column="FUNCTION_SEQUENCE" jdbcType="DECIMAL" property="functionSequence"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="object_version" jdbcType="BIGINT" property="objectVersion"/>
        <!--custom-->
        <result column="url" jdbcType="VARCHAR" property="url"/>
    </resultMap>
    <sql id="Base_Column_List">
    FUNCTION_ID,MODULE_CODE,FUNCTION_ICON,FUNCTION_CODE,FUNCTION_NAME,FUNCTION_DESCRIPTION,
    RESOURCE_ID,PARENT_FUNCTION_ID,ENABLE_FLAG,FUNCTION_SEQUENCE
  </sql>

    <select id="selectTopFunctions" resultMap="BaseResultMap">
    select
    sf.FUNCTION_ID,sf.function_name,sf.function_icon,sr.url
    from
    sys_function sf
    left join sys_resource sr on sf.resource_id=sr.resource_id
    where
    parent_function_id is null or parent_function_id =''
    and exists(
    select 1 from sys_role_function srf.function_id = sf.function_id and srf.role_id = #{roleId}
    )
    order by FUNCTION_SEQUENCE
  </select>

    <select id="selectChildFunctions" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    sf.function_id,sf.function_name,sf.function_icon,sr.url
    from
    sys_function sf
    left join sys_resource sr on sf.resource_id=sr.resource_id
    where
    parent_function_id=#{functionId}
    and exists(
    select 1 from sys_role_function srf.function_id = sf.function_id and srf.role_id = #{roleId}
    )
  </select>

    <select id="getFunctionOptions" resultType="java.util.Map">
    select
    function_id as id,
    function_name as text
    from sys_function
  </select>

    <select id="selectFunctions" resultMap="BaseResultMap">
        select
        sf.function_id,sf.function_code,sf.function_name,sf2.function_name as
        parentFunctionName,sf.function_icon,sr.url,sr.name as resourceName
        from
        sys_function sf
        left join sys_resource sr on sf.resource_id=sr.resource_id
        left join sys_function sf2 on sf.parent_function_id=sf2.function_id
        <where>
            <if test="functionName!=null">
                sf.function_name=functionName
            </if>
            <if test="functionCode!=null">
                sf.function_code=functionCode
            </if>
        </where>
        order by
        function_id asc
    </select>

    <select id="selectRoleFunctionAssignList" parameterType="java.lang.Long" resultType="java.util.Map">
        SELECT
            #{roleId} roleId,
            sf.function_id id,
            sf.function_id functionId,
            sf.parent_function_id pId,
            sf.function_name name,
            'false' OPEN,
            (
                CASE (
                    SELECT
                        count(1)
                    FROM
                        sys_role_function srf
                    WHERE
                        srf.role_id = #{roleId}
                    AND srf.function_id = sf.function_id
                )
                WHEN 1 THEN
                    'true'
                ELSE
                    'false'
                END
            ) checked
        FROM
            sys_function sf
    </select>
</mapper>